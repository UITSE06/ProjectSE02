/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.Report.rpRegisterSub;
import GUI.Report.rpStateFee;
import PUBLIC.*;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Hung
 */
public class frmMain extends javax.swing.JFrame {

    private ClsStaffLoginInfo_Public staffInfo = new ClsStaffLoginInfo_Public();
    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
        setClocks();
        SetComponentByAccess();
        lbStaffName.setText(staffInfo.getTenNV());
        lbIdStaff.setText(staffInfo.getMaNV());
        lbPosition.setText(staffInfo.getChucVu());
    }
    
    private void SetComponentByAccess(){
        String[] listAcc = staffInfo.getMaPhanQuyen().split("\\,");
        for(int i = 0; i<listAcc.length;i++){
            if("1".equals(listAcc[i])){
                tabMinistry.setEnabled(true);
            }
            if("2".equals(listAcc[i])){
                tabFinacial.setEnabled(true);
            }
            if("3".equals(listAcc[i])){
                tabStudentManage.setEnabled(true);
                miInfoStudent.setEnabled(false);
                miRegisterCourse.setEnabled(false);
                miInputScore.setEnabled(true);
            }
            if("4".equals(listAcc[i])){
                tabStudentManage.setEnabled(true);
                miInfoStudent.setEnabled(false);
                miRegisterCourse.setEnabled(true);
                miInputScore.setEnabled(false);
            }
            if("5".equals(listAcc[i])){
                miListStaff.setEnabled(true);
            }
            if("6".equals(listAcc[i])){
                tabAdministrator.setEnabled(true);
                miSystemConfig.setEnabled(false);
                miSetAccess.setEnabled(false);
                miChangeRegulation.setEnabled(true);
            }
            if("7".equals(listAcc[i])){
                tabStudentManage.setEnabled(true);
                miRegisterCourse.setEnabled(false);
                miInputScore.setEnabled(false);
                miInfoStudent.setEnabled(true);
            }
            if("8".equals(listAcc[i])){
                tabAdministrator.setEnabled(true);
                miSystemConfig.setEnabled(true);
                miSetAccess.setEnabled(false);
                miChangeRegulation.setEnabled(false);
                tabSystem.setEnabled(true);
                miSetAccess.setEnabled(true);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXFrame1 = new org.jdesktop.swingx.JXFrame();
        st_Info = new org.jdesktop.swingx.JXStatusBar();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        lbStaffName = new org.jdesktop.swingx.JXLabel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        lbIdStaff = new org.jdesktop.swingx.JXLabel();
        lbPos = new org.jdesktop.swingx.JXLabel();
        lbPosition = new org.jdesktop.swingx.JXLabel();
        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        lb_Clock = new org.jdesktop.swingx.JXLabel();
        lb_Date = new org.jdesktop.swingx.JXLabel();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        jXButton2 = new org.jdesktop.swingx.JXButton();
        jXButton3 = new org.jdesktop.swingx.JXButton();
        jXButton4 = new org.jdesktop.swingx.JXButton();
        jXButton5 = new org.jdesktop.swingx.JXButton();
        jXButton6 = new org.jdesktop.swingx.JXButton();
        jXButton7 = new org.jdesktop.swingx.JXButton();
        jXButton8 = new org.jdesktop.swingx.JXButton();
        btnLogOut = new org.jdesktop.swingx.JXButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabbedPaneMain = new GUI.ClosableTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        tabSystem = new javax.swing.JMenu();
        miBackUp = new javax.swing.JMenuItem();
        miRestore = new javax.swing.JMenuItem();
        tabMinistry = new javax.swing.JMenu();
        miListCourse = new javax.swing.JMenuItem();
        mnTinhTrangDangKy = new javax.swing.JMenuItem();
        miListMayjor = new javax.swing.JMenuItem();
        miListFacuty = new javax.swing.JMenuItem();
        miOpenCourses = new javax.swing.JMenuItem();
        miTypeOfCourse = new javax.swing.JMenuItem();
        miHumanSubject = new javax.swing.JMenuItem();
        tabFinacial = new javax.swing.JMenu();
        miGetFee = new javax.swing.JMenuItem();
        mnStateFee = new javax.swing.JMenuItem();
        tabStaffManage = new javax.swing.JMenu();
        miListStaff = new javax.swing.JMenuItem();
        miStaffInfo = new javax.swing.JMenuItem();
        tabStudentManage = new javax.swing.JMenu();
        miInfoStudent = new javax.swing.JMenuItem();
        miInputScore = new javax.swing.JMenuItem();
        miRegisterCourse = new javax.swing.JMenuItem();
        tabAdministrator = new javax.swing.JMenu();
        miSystemConfig = new javax.swing.JMenuItem();
        miChangeRegulation = new javax.swing.JMenuItem();
        miSetAccess = new javax.swing.JMenuItem();
        tabHelp = new javax.swing.JMenu();
        miSoftwareInfo = new javax.swing.JMenuItem();
        miGuide = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jXFrame1Layout = new javax.swing.GroupLayout(jXFrame1.getContentPane());
        jXFrame1.getContentPane().setLayout(jXFrame1Layout);
        jXFrame1Layout.setHorizontalGroup(
            jXFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jXFrame1Layout.setVerticalGroup(
            jXFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PHẦN MỀM QUẢN LÝ ĐĂNG KÝ MÔN HỌC VÀ THU HỌC PHÍ");

        st_Info.setBackground(java.awt.SystemColor.activeCaption);

        jXLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Misc-Web-Database-icon.png"))); // NOI18N
        jXLabel1.setText("Database: ");
        st_Info.add(jXLabel1);

        jXLabel3.setText("QUANLYSINHVIEN");
        st_Info.add(jXLabel3);

        jXLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/employee.png"))); // NOI18N
        jXLabel4.setText("Nhân viên:");
        jXLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        st_Info.add(jXLabel4);

        lbStaffName.setForeground(new java.awt.Color(255, 0, 0));
        lbStaffName.setText("Huỳnh Ngọc Hưng");
        lbStaffName.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        st_Info.add(lbStaffName);

        jXLabel2.setText("Mã nhân viên:");
        st_Info.add(jXLabel2);

        lbIdStaff.setForeground(new java.awt.Color(255, 0, 0));
        lbIdStaff.setText("NV0001");
        st_Info.add(lbIdStaff);

        lbPos.setText("Chức vụ:");
        st_Info.add(lbPos);

        lbPosition.setForeground(new java.awt.Color(255, 0, 0));
        lbPosition.setText("admin");
        st_Info.add(lbPosition);

        jXPanel1.setBackground(java.awt.SystemColor.activeCaption);

        lb_Clock.setForeground(new java.awt.Color(255, 255, 255));
        lb_Clock.setText("00:00:00");
        lb_Clock.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        lb_Date.setForeground(new java.awt.Color(255, 255, 255));
        lb_Date.setText("Date");
        lb_Date.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jXButton1.setBackground(new java.awt.Color(255, 255, 255));
        jXButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dk.png"))); // NOI18N

        jXButton2.setBackground(new java.awt.Color(255, 255, 255));
        jXButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/listicon.png"))); // NOI18N

        jXButton3.setBackground(new java.awt.Color(255, 255, 255));
        jXButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/money.png"))); // NOI18N

        jXButton4.setBackground(new java.awt.Color(255, 255, 255));
        jXButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/personal-information-icon.png"))); // NOI18N

        jXButton5.setBackground(new java.awt.Color(255, 255, 255));
        jXButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search-Results.png"))); // NOI18N

        jXButton6.setBackground(new java.awt.Color(255, 255, 255));
        jXButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Backupicon.png"))); // NOI18N

        jXButton7.setBackground(new java.awt.Color(255, 255, 255));
        jXButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backup.png"))); // NOI18N

        jXButton8.setBackground(new java.awt.Color(255, 255, 255));
        jXButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Register-icon.png"))); // NOI18N

        btnLogOut.setBackground(new java.awt.Color(255, 255, 255));
        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logout-icon.png"))); // NOI18N
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXPanel1Layout = new javax.swing.GroupLayout(jXPanel1);
        jXPanel1.setLayout(jXPanel1Layout);
        jXPanel1Layout.setHorizontalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lb_Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lb_Clock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jXPanel1Layout.setVerticalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jXButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lb_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lb_Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(TabbedPaneMain);

        jMenuBar1.setFont(jMenuBar1.getFont().deriveFont(jMenuBar1.getFont().getStyle() | java.awt.Font.BOLD, 13));

        tabSystem.setForeground(new java.awt.Color(255, 0, 0));
        tabSystem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/System-icon.png"))); // NOI18N
        tabSystem.setText("Hệ Thống");
        tabSystem.setEnabled(false);
        tabSystem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        miBackUp.setText("Sao lưu CSDL");
        tabSystem.add(miBackUp);

        miRestore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backup.png"))); // NOI18N
        miRestore.setText("Phục hồi CSDL");
        miRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRestoreActionPerformed(evt);
            }
        });
        tabSystem.add(miRestore);

        jMenuBar1.add(tabSystem);

        tabMinistry.setText("Giáo Vụ");
        tabMinistry.setEnabled(false);
        tabMinistry.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        miListCourse.setText("Danh sách môn học");
        miListCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miListCourseActionPerformed(evt);
            }
        });
        tabMinistry.add(miListCourse);

        mnTinhTrangDangKy.setText("Tình trạng đăng ký môn học");
        mnTinhTrangDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTinhTrangDangKyActionPerformed(evt);
            }
        });
        tabMinistry.add(mnTinhTrangDangKy);

        miListMayjor.setText("Danh sách ngành");
        miListMayjor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miListMayjorActionPerformed(evt);
            }
        });
        tabMinistry.add(miListMayjor);

        miListFacuty.setText("Danh sách khoa");
        miListFacuty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miListFacutyActionPerformed(evt);
            }
        });
        tabMinistry.add(miListFacuty);

        miOpenCourses.setText("Mở môn học");
        miOpenCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenCoursesActionPerformed(evt);
            }
        });
        tabMinistry.add(miOpenCourses);

        miTypeOfCourse.setText("Loại môn học");
        miTypeOfCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miTypeOfCourseActionPerformed(evt);
            }
        });
        tabMinistry.add(miTypeOfCourse);

        miHumanSubject.setText("Quản lý đối tượng");
        miHumanSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miHumanSubjectActionPerformed(evt);
            }
        });
        tabMinistry.add(miHumanSubject);

        jMenuBar1.add(tabMinistry);

        tabFinacial.setText("Kế Hoạch - Tài Chính");
        tabFinacial.setEnabled(false);
        tabFinacial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        miGetFee.setText("Thu học phí");
        miGetFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGetFeeActionPerformed(evt);
            }
        });
        tabFinacial.add(miGetFee);

        mnStateFee.setText("Tình trạng thu học phí");
        mnStateFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnStateFeeActionPerformed(evt);
            }
        });
        tabFinacial.add(mnStateFee);

        jMenuBar1.add(tabFinacial);

        tabStaffManage.setText("Nhân Viên");
        tabStaffManage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        miListStaff.setText("Danh sách nhân viên");
        miListStaff.setEnabled(false);
        miListStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miListStaffActionPerformed(evt);
            }
        });
        tabStaffManage.add(miListStaff);

        miStaffInfo.setText("Thông tin nhân viên");
        miStaffInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miStaffInfoActionPerformed(evt);
            }
        });
        tabStaffManage.add(miStaffInfo);

        jMenuBar1.add(tabStaffManage);

        tabStudentManage.setText("Sinh Viên");
        tabStudentManage.setEnabled(false);
        tabStudentManage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        miInfoStudent.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        miInfoStudent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/personal-information-icon.png"))); // NOI18N
        miInfoStudent.setText("Thông tin sinh viên");
        miInfoStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miInfoStudentActionPerformed(evt);
            }
        });
        tabStudentManage.add(miInfoStudent);

        miInputScore.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        miInputScore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search-Results.png"))); // NOI18N
        miInputScore.setText("Kết quả học tập");
        miInputScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miInputScoreActionPerformed(evt);
            }
        });
        tabStudentManage.add(miInputScore);

        miRegisterCourse.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        miRegisterCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dk.png"))); // NOI18N
        miRegisterCourse.setText("Đăng ký môn học");
        miRegisterCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRegisterCourseActionPerformed(evt);
            }
        });
        tabStudentManage.add(miRegisterCourse);

        jMenuBar1.add(tabStudentManage);

        tabAdministrator.setText("Quản Trị");
        tabAdministrator.setEnabled(false);
        tabAdministrator.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        miSystemConfig.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        miSystemConfig.setText("Cấu hình hệ thống");
        tabAdministrator.add(miSystemConfig);

        miChangeRegulation.setText("Quy định");
        miChangeRegulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miChangeRegulationActionPerformed(evt);
            }
        });
        tabAdministrator.add(miChangeRegulation);

        miSetAccess.setText("Phân quyền");
        miSetAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSetAccessActionPerformed(evt);
            }
        });
        tabAdministrator.add(miSetAccess);

        jMenuBar1.add(tabAdministrator);

        tabHelp.setText("Trợ Giúp");
        tabHelp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        miSoftwareInfo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        miSoftwareInfo.setText("Thông tin phần mềm");
        tabHelp.add(miSoftwareInfo);

        miGuide.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        miGuide.setText("Hướng dẫn sử dụng");
        miGuide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGuideActionPerformed(evt);
            }
        });
        tabHelp.add(miGuide);

        jMenuBar1.add(tabHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(st_Info, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jXPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(st_Info, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jXPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miInfoStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miInfoStudentActionPerformed
        try {
            ThongTinSV ttSinhVien = new ThongTinSV();
            int index = 0;
            if (TabbedPaneMain.getTabCount() == 0) {
                TabbedPaneMain.addTab("Thông tin sinh viên   ", null, ttSinhVien, "thongtinsv");
            } else {
                index = TabbedPaneMain.indexOfTab("Thông tin sinh viên   ");
                if (index < 0) {
                    TabbedPaneMain.addTab("Thông tin sinh viên   ", null, ttSinhVien, "thongtinsv");
                    TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Thông tin sinh viên   "));
                } else {
                    TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Thông tin sinh viên   "));
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_miInfoStudentActionPerformed

    private void miInputScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miInputScoreActionPerformed
        FrmManageScore frmBangDiem = new FrmManageScore();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Bảng điểm sinh viên  ", null, frmBangDiem, "frmBangDiem");
        } else {
            int index = TabbedPaneMain.indexOfTab("Bảng điểm sinh viên  ");
            if (index < 0) {
                TabbedPaneMain.addTab("Bảng điểm sinh viên  ", null, frmBangDiem, "frmBangDiem");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Bảng điểm sinh viên  "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Bảng điểm sinh viên  "));
            }
        }
    }//GEN-LAST:event_miInputScoreActionPerformed

    private void miRegisterCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRegisterCourseActionPerformed
        FrmRegisterCourses dkMonHoc = new FrmRegisterCourses();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Đăng kí môn học   ", null, dkMonHoc, "dkMonHoc");
        } else {
            int index = TabbedPaneMain.indexOfTab("Đăng kí môn học   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Đăng kí môn học   ", null, dkMonHoc, "dkMonHoc");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Đăng kí môn học   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Đăng kí môn học   "));
            }
        }
    }//GEN-LAST:event_miRegisterCourseActionPerformed

    private void miListCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miListCourseActionPerformed
        FrmListCourses dsMonHoc = new FrmListCourses();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Danh sách môn học   ", null, dsMonHoc, "dsMonHoc");
        } else {
            int index = TabbedPaneMain.indexOfTab("Danh sách môn học   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Danh sách môn học   ", null, dsMonHoc, "dsMonHoc");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Danh sách môn học   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Danh sách môn học   "));
            }
        }
    }//GEN-LAST:event_miListCourseActionPerformed

    private void miGuideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGuideActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_miGuideActionPerformed

    private void mnTinhTrangDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTinhTrangDangKyActionPerformed
        // TODO add your handling code here:
        rpRegisterSub rpDKM = new rpRegisterSub();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Tình trạng đăng ký môn học   ", null, rpDKM, "rpDangKyMonHoc");
        } else {
            int index = TabbedPaneMain.indexOfTab("Tình trạng đăng ký môn học   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Tình trạng đăng ký môn học   ", null, rpDKM, "rpDangKyMonHoc");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Tình trạng đăng ký môn học   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Tình trạng đăng ký môn học   "));
            }
        }
    }//GEN-LAST:event_mnTinhTrangDangKyActionPerformed

    private void miListMayjorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miListMayjorActionPerformed
        FrmListMayjors listMayjor = new FrmListMayjors();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Danh sách ngành   ", null, listMayjor, "listMayjor");
        } else {
            int index = TabbedPaneMain.indexOfTab("Danh sách ngành   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Danh sách ngành   ", null, listMayjor, "listMayjor");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Danh sách ngành   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Danh sách ngành   "));
            }
        }
    }//GEN-LAST:event_miListMayjorActionPerformed

    private void miListFacutyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miListFacutyActionPerformed
        FrmListFaculty listFac = new FrmListFaculty();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Danh sách khoa   ", null, listFac, "listFac");
        } else {
            int index = TabbedPaneMain.indexOfTab("Danh sách khoa   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Danh sách khoa   ", null, listFac, "listFac");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Danh sách khoa   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Danh sách khoa   "));
            }
        }
    }//GEN-LAST:event_miListFacutyActionPerformed
    /*@AnhQuan
     *gọi form quy định
     */
    private void miChangeRegulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miChangeRegulationActionPerformed
        FrmRegulation regulation = new FrmRegulation();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Quy định   ", null, regulation, "listFac");
        } else {
            int index = TabbedPaneMain.indexOfTab("Quy định   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Quy định   ", null, regulation, "listFac");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Quy định   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Quy định   "));
            }
        }
    }//GEN-LAST:event_miChangeRegulationActionPerformed

    private void miOpenCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenCoursesActionPerformed
        FrmChooseCourseToOpen openCourse = new FrmChooseCourseToOpen();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Mở môn học   ", null, openCourse, "openCourse");
        } else {
            int index = TabbedPaneMain.indexOfTab("Mở môn học   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Mở môn học   ", null, openCourse, "openCourse");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Mở môn học   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Mở môn học   "));
            }
        }
    }//GEN-LAST:event_miOpenCoursesActionPerformed

    private void miTypeOfCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miTypeOfCourseActionPerformed
        FrmTypeOfCourse typeOfCourse = new FrmTypeOfCourse();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Loại môn học   ", null, typeOfCourse, "typeOfCourse");
        } else {
            int index = TabbedPaneMain.indexOfTab("Loại môn học   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Loại môn học   ", null, typeOfCourse, "typeOfCourse");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Loại môn học   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Loại môn học   "));
            }
        }
    }//GEN-LAST:event_miTypeOfCourseActionPerformed

    private void miHumanSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miHumanSubjectActionPerformed
        FrmHumanSubjects humanSubject = new FrmHumanSubjects();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Quản lý đối tượng   ", null, humanSubject, "humanSubject");
        } else {
            int index = TabbedPaneMain.indexOfTab("Quản lý đối tượng   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Quản lý đối tượng   ", null, humanSubject, "humanSubject");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Quản lý đối tượng   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Quản lý đối tượng   "));
            }
        }
    }//GEN-LAST:event_miHumanSubjectActionPerformed

    private void miGetFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGetFeeActionPerformed
        FrmPaymentFee payFee = new FrmPaymentFee();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Thu học phí   ", null, payFee, "payFee");
        } else {
            int index = TabbedPaneMain.indexOfTab("Thu học phí   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Thu học phí   ", null, payFee, "payFee");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Thu học phí   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Thu học phí   "));
            }
        }
    }//GEN-LAST:event_miGetFeeActionPerformed

    private void miListStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miListStaffActionPerformed
        try {
            // TODO add your handling code here:
            FrmStaffManage frmStaff = new FrmStaffManage();
            if (TabbedPaneMain.getTabCount() == 0) {
                TabbedPaneMain.addTab("Danh sách nhân viên   ", null, frmStaff, "frmStaff");
            } else {
                int index = TabbedPaneMain.indexOfTab("Danh sách nhân viên   ");
                if (index < 0) {
                    TabbedPaneMain.addTab("Danh sách nhân viên   ", null, frmStaff, "frmStaff");
                    TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Danh sách nhân viên   "));
                } else {
                    TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Danh sách nhân viên   "));
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_miListStaffActionPerformed

    private void miStaffInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miStaffInfoActionPerformed
        FrmStaffInfo staffInfo = new FrmStaffInfo();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Thông tin nhân viên   ", null, staffInfo, "staffInfo");
        } else {
            int index = TabbedPaneMain.indexOfTab("Thông tin nhân viên   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Thông tin nhân viên   ", null, staffInfo, "staffInfo");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Thông tin nhân viên   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Thông tin nhân viên   "));
            }
        }
    }//GEN-LAST:event_miStaffInfoActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        FrmLogin login = new FrmLogin();
        login.setVisible(true);        
        this.dispose();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void miSetAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSetAccessActionPerformed
        FrmPositionAndAccess PoAc = new FrmPositionAndAccess();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Phân quyền   ", null, PoAc, "PoAc");
        } else {
            int index = TabbedPaneMain.indexOfTab("Phân quyền   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Phân quyền   ", null, PoAc, "PoAc");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Phân quyền   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Phân quyền   "));
            }
        }
    }//GEN-LAST:event_miSetAccessActionPerformed

    private void miRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRestoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_miRestoreActionPerformed

    
    private void mnStateFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnStateFeeActionPerformed
        // TODO add your handling code here:
          rpStateFee rpStateF = new rpStateFee();
        if (TabbedPaneMain.getTabCount() == 0) {
            TabbedPaneMain.addTab("Trạng thái thu học phí   ", null, rpStateF, "stateFee");
        } else {
            int index = TabbedPaneMain.indexOfTab("Trạng thái thu học phí   ");
            if (index < 0) {
                TabbedPaneMain.addTab("Trạng thái thu học phí   ", null, rpStateF, "stateFee");
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Trạng thái thu học phí   "));
            } else {
                TabbedPaneMain.setSelectedIndex(TabbedPaneMain.indexOfTab("Trạng thái thu học phí   "));
            }
        }
    }//GEN-LAST:event_mnStateFeeActionPerformed

    private void setClocks() {

        Thread clock = new Thread() {
            public void run() {
                for (;;) {
                    Calendar cal = Calendar.getInstance();
                    cal.getTime();
                    SimpleDateFormat sdfDate = new SimpleDateFormat("E, dd/MM/yyyy");
                    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                    lb_Clock.setText(sdf.format(cal.getTime()));
                    lb_Date.setText(sdfDate.format(cal.getTime()));
                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        };
        clock.start();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmMain frM = new frmMain();
                frM.setSize(Toolkit.getDefaultToolkit().getScreenSize().width, Toolkit.getDefaultToolkit().getScreenSize().height - 40);
                frM.setVisible(true);
            }
        });

    }

    //
    // private ClosableTabbedPane TabbePaneMain1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.ClosableTabbedPane TabbedPaneMain;
    private org.jdesktop.swingx.JXButton btnLogOut;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXButton jXButton2;
    private org.jdesktop.swingx.JXButton jXButton3;
    private org.jdesktop.swingx.JXButton jXButton4;
    private org.jdesktop.swingx.JXButton jXButton5;
    private org.jdesktop.swingx.JXButton jXButton6;
    private org.jdesktop.swingx.JXButton jXButton7;
    private org.jdesktop.swingx.JXButton jXButton8;
    private org.jdesktop.swingx.JXFrame jXFrame1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private org.jdesktop.swingx.JXLabel lbIdStaff;
    private org.jdesktop.swingx.JXLabel lbPos;
    private org.jdesktop.swingx.JXLabel lbPosition;
    private org.jdesktop.swingx.JXLabel lbStaffName;
    private org.jdesktop.swingx.JXLabel lb_Clock;
    private org.jdesktop.swingx.JXLabel lb_Date;
    private javax.swing.JMenuItem miBackUp;
    private javax.swing.JMenuItem miChangeRegulation;
    private javax.swing.JMenuItem miGetFee;
    private javax.swing.JMenuItem miGuide;
    private javax.swing.JMenuItem miHumanSubject;
    private javax.swing.JMenuItem miInfoStudent;
    private javax.swing.JMenuItem miInputScore;
    private javax.swing.JMenuItem miListCourse;
    private javax.swing.JMenuItem miListFacuty;
    private javax.swing.JMenuItem miListMayjor;
    private javax.swing.JMenuItem miListStaff;
    private javax.swing.JMenuItem miOpenCourses;
    private javax.swing.JMenuItem miRegisterCourse;
    private javax.swing.JMenuItem miRestore;
    private javax.swing.JMenuItem miSetAccess;
    private javax.swing.JMenuItem miSoftwareInfo;
    private javax.swing.JMenuItem miStaffInfo;
    private javax.swing.JMenuItem miSystemConfig;
    private javax.swing.JMenuItem miTypeOfCourse;
    private javax.swing.JMenuItem mnStateFee;
    private javax.swing.JMenuItem mnTinhTrangDangKy;
    private org.jdesktop.swingx.JXStatusBar st_Info;
    private javax.swing.JMenu tabAdministrator;
    private javax.swing.JMenu tabFinacial;
    private javax.swing.JMenu tabHelp;
    private javax.swing.JMenu tabMinistry;
    private javax.swing.JMenu tabStaffManage;
    private javax.swing.JMenu tabStudentManage;
    private javax.swing.JMenu tabSystem;
    // End of variables declaration//GEN-END:variables
}
