/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.clsStudent_BLL;
import PUBLIC.clsStudent_Public;
import java.awt.Color;
import java.awt.Cursor;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author Hung 15-06-2014 Nhập nhiều sinh viên cùng lúc
 */
public class frmImportExcel extends javax.swing.JFrame {

    DefaultTableModel model;
    clsStudent_Public stPublic = new clsStudent_Public();
    clsStudent_BLL stBLL;
    ResultSet rs;
    int start = 0, end = 100;
     int countError = 0;
    /**
     * Creates new form frmImportExcel
     */
    public frmImportExcel() {
        initComponents();
        btnHuy.setEnabled(false);
        btnLuuDS.setEnabled(false);
        btnXoa.setEnabled(false);
        jXButton1.setEnabled(false);
        btCheckData.setEnabled(false);
        lbNameState.setVisible(false);
        prBar.setVisible(false);
        tb_Excel.setEditable(false);
        prBar.setValue(0);
        fSetModelTable();
    }

    private void fSetModelTable() {
        String[] titiles = {"Họ và tên", "Giới tính", "Ngày sinh", "Năm nhập học", "Huyện/Quận/Thị xã", "Tỉnh/Thành phố", "Mã ngành", "Mã đối tượng", "Trạng thái"};
        model = new DefaultTableModel(titiles, 0);
        tb_Excel.setModel(model);
        LineNumberTableRowHeader lineRow = new LineNumberTableRowHeader(scrStudentDetail, tb_Excel);
        lineRow.setBackground(new Color(240, 240, 240));
        scrStudentDetail.setRowHeaderView(lineRow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jPanel2 = new javax.swing.JPanel();
        btnHuy = new org.jdesktop.swingx.JXButton();
        btnXoa = new org.jdesktop.swingx.JXButton();
        btnNhapExcel = new org.jdesktop.swingx.JXButton();
        btnLuuDS = new org.jdesktop.swingx.JXButton();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        btCheckData = new org.jdesktop.swingx.JXButton();
        jPanel3 = new javax.swing.JPanel();
        prBar = new javax.swing.JProgressBar();
        lbNameState = new org.jdesktop.swingx.JXLabel();
        jPanel4 = new javax.swing.JPanel();
        scrStudentDetail = new javax.swing.JScrollPane();
        tb_Excel = new org.jdesktop.swingx.JXTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jXLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jXLabel1.setText("NHẬP SINH VIÊN TỪ EXCEL");
        jXLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jXLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(357, 357, 357)
                .addComponent(jXLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addGap(319, 319, 319))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));

        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnNhapExcel.setText("Mở file");
        btnNhapExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapExcelActionPerformed(evt);
            }
        });

        btnLuuDS.setText("Lưu danh sách");
        btnLuuDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuDSActionPerformed(evt);
            }
        });

        jXButton1.setText("Chỉnh sửa dữ liệu");
        jXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton1ActionPerformed(evt);
            }
        });

        btCheckData.setText("Kiểm tra dữ liệu");
        btCheckData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNhapExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btCheckData, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(btnLuuDS, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNhapExcel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuuDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCheckData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        prBar.setPreferredSize(new java.awt.Dimension(146, 8));
        prBar.setStringPainted(true);

        lbNameState.setText("Đang lưu xuống cơ sở dữ liệu");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbNameState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(prBar, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(prBar, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
            .addComponent(lbNameState, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        scrStudentDetail.setViewportView(tb_Excel);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrStudentDetail)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrStudentDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) tb_Excel.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        btnNhapExcel.setEnabled(true);
        btnXoa.setEnabled(false);
        btnLuuDS.setEnabled(false);
        btnHuy.setEnabled(false);
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        if (model.getRowCount() < 1) {
            btnNhapExcel.setEnabled(true);
            btnHuy.setEnabled(false);
            btnLuuDS.setEnabled(false);
            btnXoa.setEnabled(false);
        } else {
            int selectRow = tb_Excel.getSelectedRow();
            if (selectRow != -1) {
                model.removeRow(selectRow);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNhapExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapExcelActionPerformed
        // TODO add your handling code here:
        fSetModelTable();
        JFileChooser jFChooser = new JFileChooser();
        // jFChooser.setFileFilter(new FileNameExtensionFilter(null,"xls"));
        int add = jFChooser.showOpenDialog(jFChooser);
        if (add == JFileChooser.APPROVE_OPTION) {
            try {
                File addFile = jFChooser.getSelectedFile();
                Workbook excel = Workbook.getWorkbook(addFile);
                for (int sheets = 0; sheets < excel.getNumberOfSheets(); sheets++) {
                    Sheet sheet = excel.getSheet(sheets);
                    int columns = sheet.getColumns();
                    int rows = sheet.getRows();
                    Object[] values = new Object[columns];

                    if (checkTempleteFileExcel(sheet)) {
                        for (int row = 0; row < rows; row++) {
                            for (int column1 = 0; column1 < columns; column1++) {
                                values[column1] = sheet.getCell(column1, row).getContents();
                            }
                            model.addRow(values);
                        }
                        model.removeRow(0);
                        tb_Excel.setModel(model);
                        btnNhapExcel.setEnabled(false);
                        btnXoa.setEnabled(true);
                        btnHuy.setEnabled(true);
                        btnLuuDS.setEnabled(true);
                        btnNhapExcel.setEnabled(false);
                        jXButton1.setEnabled(true);
                         btCheckData.setEnabled(true);
                    }
                }
            } catch (IOException | BiffException ex) {
                Logger.getLogger(frmImportExcel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnNhapExcelActionPerformed

    private boolean checkTempleteFileExcel(Sheet sheet) {
        Object[] values = new Object[sheet.getColumns()];
        String[] temp = {"NAME", "GENDER", "BIRTHDAY", "YEAR", "DISTRICT", "PROVINCE", "ID MAYJORS", "ID OBJECT", "STATE"};
        for (int i = 0; i < sheet.getColumns(); ++i) {
            values[i] = sheet.getCell(i, 0).getContents().toLowerCase();
            String temp2 = String.valueOf(values[i]).trim();
            if (!String.valueOf(values[i]).trim().equals(temp[i].toLowerCase().trim())) {

                JOptionPane.showMessageDialog(null, "File không đúng định dạng.", "Lỗi!", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
        }
        return true;
    }

    private void fActionSave() throws Exception {
        String _yearOfApply = "";
        String _idMayjors = "";
        String _nameStudent = "";
        String _gender = "";
        String _District = "";
        String _birthday = "";
        String _province = "";
        String _idObject = "";
        String _idState = "";
        String _maxIdStudent = "";
        int _insert = 0;
        try {
            stBLL = new clsStudent_BLL();
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            _nameStudent = String.valueOf(tb_Excel.getValueAt(start, 0));
            _gender = String.valueOf(tb_Excel.getValueAt(start, 1));
            _birthday = String.valueOf(tb_Excel.getValueAt(start, 2));
            _yearOfApply = String.valueOf(tb_Excel.getValueAt(start, 3));
            _District = String.valueOf(tb_Excel.getValueAt(start, 4));
            _province = String.valueOf(tb_Excel.getValueAt(start, 5));
            _idMayjors = String.valueOf(tb_Excel.getValueAt(start, 6));
            _idObject = String.valueOf(tb_Excel.getValueAt(start, 7));
            _idState = String.valueOf(tb_Excel.getValueAt(start, 8));
            stPublic.setIdStudent(_yearOfApply.substring(2, 4) + _idMayjors.substring(5, 7));
            ResultSet maxMSSV = stBLL.getMaxMSSV(stPublic);
            // gán giá trị mssv mới cho _maxIdStudent
            while (maxMSSV.next()) {
                _maxIdStudent = maxMSSV.getString(1);
            }
            stPublic.setIdStudent(_maxIdStudent);
            stPublic.setName(_nameStudent);
            if (_gender.equals("Nam")) {
                stPublic.setGender(1);
            } else {
                stPublic.setGender(0);
            }
            Date ins = formatter.parse(_birthday.toString().trim());
            java.sql.Date brtday = new java.sql.Date(ins.getTime());
            stPublic.setBirthday(brtday);
            stPublic.setYearOfApply(_yearOfApply);
            stPublic.setDistrict(_District);
            stPublic.setProvinces(_province);
            stPublic.setIdMayjors(_idMayjors);
            stPublic.setIdObjects(_idObject);
            stPublic.setTinhTrang(_idState);
            stPublic.setHinhdaidien(null);
            _insert = stBLL.InsertUpdateStudent(stPublic, 0);
            start++;

        } catch (Exception ex) {
            throw ex;
        }

    }

    private void btnLuuDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuDSActionPerformed
        // TODO add your handling code here:
        lbNameState.setVisible(true);
        prBar.setVisible(true);

        end = tb_Excel.getRowCount();//bo tren ki no goi lai nhieu lan ton bo nho
        prBar.setStringPainted(true);
        Sleeper task = new Sleeper();
        task.execute();
    }//GEN-LAST:event_btnLuuDSActionPerformed

    private void jXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Bạn kích đúp vào ô cần chỉnh sửa dữ liệu", "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
        tb_Excel.setEditable(true);
    }//GEN-LAST:event_jXButton1ActionPerformed

    private boolean checkData_IdOMayojr_IDObject_Birthday() {
        boolean flag = true;
        Cursor curWait = new Cursor(Cursor.WAIT_CURSOR);
        this.setCursor(curWait);
        String _yearOfApply = "";
        String _idMayjors = "";
        String _gender = "";
        String _idObject = "";
        String _idState = "";
        String _birthday = "";
        String _idObjectTemp = "";
        String _idMayjorsTemp = "";
        int _insert = 0;
        try {
            stBLL = new clsStudent_BLL();
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

            for (int i = 0; i < tb_Excel.getRowCount(); i++) {
                _birthday = String.valueOf(tb_Excel.getValueAt(i, 2));
                _yearOfApply = String.valueOf(tb_Excel.getValueAt(i, 3));
                _idMayjors = String.valueOf(tb_Excel.getValueAt(i, 6));
                _idObject = String.valueOf(tb_Excel.getValueAt(i, 7));
                _idState = String.valueOf(tb_Excel.getValueAt(i, 8));
                stPublic.setIdMayjors(_idMayjors);
                ResultSet chkIDMayjors = stBLL.CHECK_IDMAYJORS(stPublic);
                SimpleDateFormat sdfDate = new SimpleDateFormat("dd/MM/yyyy");
                 Calendar cal = Calendar.getInstance();
                    int yPresent =cal.getTime().getYear();
                
                try{
                Date ins = formatter.parse(_birthday.toString().trim());
                    int dayIns =ins.getYear();
                if(00<ins.getYear() && ins.getYear()<500 &&(yPresent-dayIns >15)){
                java.sql.Date brtday = new java.sql.Date(ins.getTime());
                }else{
                    countError=i+1;
                    flag = false;
                    break;
                }
                }catch(Exception ex){
                    countError=i+1;
                    flag = false;
                    break;
                }    
                stPublic.setIdObjects(_idObject);
                ResultSet chkIDObject = stBLL.CHECK_IDMOBJECT(stPublic);

                if (chkIDMayjors.next()==false) {
                    _idMayjorsTemp="";
                }else{
                   do{
                       _idMayjorsTemp = chkIDMayjors.getString(1);
                   }while(chkIDMayjors.next());
                }
                
                 if (chkIDObject.next()==false) {
                    _idObjectTemp="";
                }else{
                   do{
                        _idObjectTemp = chkIDObject.getString(1);
                    }while(chkIDObject.next());
                }
                  
                if (_idMayjorsTemp == "") {
                    flag = false;
                    countError = i+1;
                    break;
                } else {
                    if (_idObjectTemp == "") {
                        flag = false;
                        countError = i+1;
                        break;
                    } else {
                        flag = true;
                    }
                }
            }

        } catch (Exception ex) {
            flag = false;
        }
        
        this.setCursor(null);
        return flag;
    }

    private void btCheckDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckDataActionPerformed
        // TODO add your handling code here:

        if (checkData_IdOMayojr_IDObject_Birthday()) {
            btnLuuDS.setEnabled(true);
            jXButton1.setEnabled(true);
            btnHuy.setEnabled(true);
            btnXoa.setEnabled(true);
            btCheckData.setEnabled(true);
            btnNhapExcel.setEnabled(false);
            JOptionPane.showMessageDialog(rootPane, "Dữ liệu đã có thể lưu xuống cơ sở dữ liêu.", "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Dữ liệu bị lỗi.\nBạn vui lòng kiểm tra dữ liệu tại dòng số "+countError+".\nXin cảm ơn!", "Lỗi!", JOptionPane.ERROR_MESSAGE);
            btnNhapExcel.setEnabled(true);
            btnLuuDS.setEnabled(false);
            btnLuuDS.setEnabled(false);
            jXButton1.setEnabled(false);
            btnHuy.setEnabled(false);
            btnXoa.setEnabled(false);
             btCheckData.setEnabled(true);
        }
    }//GEN-LAST:event_btCheckDataActionPerformed

    class Sleeper extends SwingWorker {

        @Override
        public Void doInBackground() throws InterruptedException {

            prBar.setMaximum(end);//thay cho nay la end ne
            while (start < end) {
                try {
                    fActionSave();
                } catch (Exception ex) {
                    Logger.getLogger(frmImportExcel.class.getName()).log(Level.SEVERE, null, ex);
                }
                //Call the process method to update the GUI
                publish(start);

            }
            return null;
        }

        @Override
        protected void process(List chunks) {
            //thieu cho cap nhat lai cai nay dm ok chua?
            //Okj, thank m dm.  :D

            for (Object chunk : chunks) {
                prBar.setValue((int) chunk);
            }
        }

        //when the 'task' has finished re-enable the go button
        @Override
        public void done() {
                fSetModelTable();
                lbNameState.setVisible(false);
                prBar.setVisible(false);
                btnNhapExcel.setEnabled(true);
                btnLuuDS.setEnabled(false);
                jXButton1.setEnabled(false);
                btnHuy.setEnabled(false);
                btnXoa.setEnabled(false);
                btCheckData.setEnabled(false);
                JOptionPane.showMessageDialog(rootPane, "Bạn đã lưu dữ liệu thành công.", "Thành công!", JOptionPane.PLAIN_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btCheckData;
    private org.jdesktop.swingx.JXButton btnHuy;
    private org.jdesktop.swingx.JXButton btnLuuDS;
    private org.jdesktop.swingx.JXButton btnNhapExcel;
    private org.jdesktop.swingx.JXButton btnXoa;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel lbNameState;
    private javax.swing.JProgressBar prBar;
    private javax.swing.JScrollPane scrStudentDetail;
    private org.jdesktop.swingx.JXTable tb_Excel;
    // End of variables declaration//GEN-END:variables
}
