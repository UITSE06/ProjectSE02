/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAL.Encrytion_DAL;
import com.microsoft.sqlserver.jdbc.SQLServerDataSource;
import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.awt.Component;
import java.awt.Container;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author John
 */
public class FrmConfig extends javax.swing.JFrame {

    /**
     * Creates new form FrmConfig
     */
    private Connection connect = null;          // Khoi tao connector
    private final FrmLogin frmLG;

    private String Server = "";
    private String userName = "";
    private String passWord = "";

    private final Encrytion_DAL encrypt = new Encrytion_DAL();
    
    public FrmConfig(FrmLogin cmpo) {
        initComponents();
        this.frmLG = cmpo;
        try {
            readFileConnectionString();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Vui lòng cài đặt kết nối với Server.", "KHÔNG THỂ KẾT NỐI.", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Đọc file lưu giữ cấu hình
    public final void readFileConnectionString() throws IOException {
        FileReader fr;
        // Mở file lên, đọc Server name, user và pass
        fr = new FileReader("connectionString");
        BufferedReader br = new BufferedReader(fr);
        String line;
        // đọc server
        if ((line = br.readLine()) != null) {
            Server = line;
        }
        // đọc user
        if ((line = br.readLine()) != null) {
            userName = (line);
        }
        // đọc pass
        if ((line = br.readLine()) != null) {
            passWord = (line);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jXPanel2 = new org.jdesktop.swingx.JXPanel();
        jXPanel4 = new org.jdesktop.swingx.JXPanel();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jPanel1 = new javax.swing.JPanel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        txtnameData = new org.jdesktop.swingx.JXTextField();
        jXPanel5 = new org.jdesktop.swingx.JXPanel();
        jrMo = new javax.swing.JRadioButton();
        jrTao = new javax.swing.JRadioButton();
        btnSua = new org.jdesktop.swingx.JXButton();
        btnMo = new org.jdesktop.swingx.JXButton();
        btnHuy = new org.jdesktop.swingx.JXButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(484, 330));
        setResizable(false);

        jXLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel1.setText("TẠO MỚI HOẶC MỞ CƠ SỞ DỮ LIỆU");
        jXLabel1.setFont(new java.awt.Font("Times New Roman", 1, 26)); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nhập tên cơ sở dữ liệu"));

        jXLabel2.setText("Tên cơ sở dữ liệu:");
        jXLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtnameData, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnameData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jXPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Tùy chọn"));

        jrMo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jrMo.setText("Mở cơ sở dữ liệu đã có.");
        jrMo.setSelected(true);
        jrMo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMoActionPerformed(evt);
            }
        });

        jrTao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jrTao.setText("Tạo mới cơ sở dữ liệu");
        buttonGroup1.add(jrMo);
        buttonGroup1.add(jrTao);
        jrTao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrTaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXPanel5Layout = new javax.swing.GroupLayout(jXPanel5);
        jXPanel5.setLayout(jXPanel5Layout);
        jXPanel5Layout.setHorizontalGroup(
            jXPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrTao)
                    .addComponent(jrMo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jXPanel5Layout.setVerticalGroup(
            jXPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrMo)
                .addGap(18, 18, 18)
                .addComponent(jrTao)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Reminders-icon.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnMo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/iBooks-icon.png"))); // NOI18N
        btnMo.setText("Mở");
        btnMo.setEnabled(false);
        btnMo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoActionPerformed(evt);
            }
        });

        btnHuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Remove.png"))); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXPanel4Layout = new javax.swing.GroupLayout(jXPanel4);
        jXPanel4.setLayout(jXPanel4Layout);
        jXPanel4Layout.setHorizontalGroup(
            jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jXPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jXPanel4Layout.setVerticalGroup(
            jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel4Layout.createSequentialGroup()
                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jXPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jXPanel2Layout = new javax.swing.GroupLayout(jXPanel2);
        jXPanel2.setLayout(jXPanel2Layout);
        jXPanel2Layout.setHorizontalGroup(
            jXPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel2Layout.createSequentialGroup()
                .addComponent(jXPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jXPanel2Layout.setVerticalGroup(
            jXPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        getContentPane().add(jXPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        FrmProperties frmPro = new FrmProperties(this);
        enableComponents(this, false);
        frmPro.setVisible(true);
    }//GEN-LAST:event_btnSuaActionPerformed

    // Mở cơ sở dữ liệu đã có.
    private void jrMoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMoActionPerformed
        // TODO add your handling code here:
        if (txtnameData.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên cơ sở dữ liệu.", "LỖI", JOptionPane.YES_OPTION);
        } else {
            // nếu chọn radio mở
            if (jrMo.isSelected()) {
                if (encrypt.DecryptText(userName).equals("")) {
                    try {
                        String url = "jdbc:sqlserver://" + Server + ";databaseName=" + txtnameData.getText() + ";integratedSecurity=true";
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                        // Khởi tạo kết nối
                        this.connect = DriverManager.getConnection(url);
                        // kết nối thành công, lưu thêm giá trị Database vô
                        saveConnectString(txtnameData.getText());
                        //enable bntMo
                        btnMo.setEnabled(true);
                    } catch (ClassNotFoundException | SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Vui lòng liên hệ quản trị viên.", "KHÔNG THỂ KẾT NỐI.", JOptionPane.ERROR_MESSAGE);
                        //Logger.getLogger(FrmConfig.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                } else {// nếu kết nối dùng tài khoản sa
                    SQLServerDataSource ds = new SQLServerDataSource();
                    ds.setServerName(Server);
                    ds.setPortNumber(1433);
                    ds.setDatabaseName(txtnameData.getText());
                    ds.setUser(encrypt.DecryptText(userName));
                    ds.setPassword(encrypt.DecryptText(passWord));
                    try {
                        this.connect = ds.getConnection();
                        // Nếu kết nối thành công, tiến hành lưu vào file
                        saveConnectString(txtnameData.getText());
                        // enable button Mo
                        btnMo.setEnabled(true);
                    } catch (SQLServerException ex) {
                        Logger.getLogger(FrmProperties.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(this, "Vui lòng liên hệ quản trị viên.", "KHÔNG THỂ KẾT NỐI.", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_jrMoActionPerformed

    // Thành thái
    // sau khi tìm thấy cơ sở dữ liệu, settext sang bên kia
    private void btnMoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoActionPerformed
        // TODO add your handling code here:
        frmLG.setText(txtnameData.getText());
        frmLG.enableComponents(frmLG, true);
        this.dispose();
    }//GEN-LAST:event_btnMoActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        frmLG.enableComponents(frmLG, true);
        this.dispose();
    }//GEN-LAST:event_btnHuyActionPerformed

    // Tạo mới CSDL dựa vào file txt
    private void jrTaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrTaoActionPerformed
        // TODO add your handling code here:
        if (txtnameData.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên cơ sở dữ liệu.", "LỖI", JOptionPane.YES_OPTION);
        } else {
            // nếu chọn radio tạo mới
            if (jrTao.isSelected()) {
                if (encrypt.DecryptText(userName).equals("")) {
                    try {
                        String url = "jdbc:sqlserver://" + Server + ";integratedSecurity=true";
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                        // Khởi tạo kết nối
                        this.connect = DriverManager.getConnection(url);
                        // Thực hiện tạo mới cơ sở dữ liệu
                        
                        // kết nối thành công, lưu thêm giá trị Database vô
                        saveConnectString(txtnameData.getText());
                        //enable bntMo
                        btnMo.setEnabled(true);
                    } catch (ClassNotFoundException | SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Vui lòng liên hệ quản trị viên.", "KHÔNG THỂ KẾT NỐI.", JOptionPane.ERROR_MESSAGE);
                        //Logger.getLogger(FrmConfig.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                } else {// nếu kết nối dùng tài khoản sa
                    SQLServerDataSource ds = new SQLServerDataSource();
                    ds.setServerName(Server);
                    ds.setPortNumber(1433);
                    ds.setDatabaseName(txtnameData.getText());
                    ds.setUser(encrypt.DecryptText(userName));
                    ds.setPassword(encrypt.DecryptText(passWord));
                    try {
                        this.connect = ds.getConnection();
                        // Nếu kết nối thành công, tiến hành lưu vào file
                        saveConnectString(txtnameData.getText());
                        // enable button Mo
                        btnMo.setEnabled(true);
                    } catch (SQLServerException ex) {
                        JOptionPane.showMessageDialog(this, "Vui lòng liên hệ quản trị viên.", "KHÔNG THỂ KẾT NỐI.", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_jrTaoActionPerformed

    // Nếu kết nối thành công, tiến hành lưu thông tin kết nối vào file
    public void saveConnectString(String databaseName) {
        FileOutputStream fos = null;
        try {
            // Kiểm tra tên cơ sở dữ liệu cũ đã có chưa
            readFileConnectionString();
            // tiến hành ghi thêm, boolean = true
            fos = new FileOutputStream("connectionString", false);
            PrintWriter pw = new PrintWriter(fos);
            // Ghi lại các giá trị config
            pw.println(Server);
            pw.println(userName);
            pw.println(passWord);
            // Ghi thêm giá trị database name
            pw.println(databaseName);
            pw.close();
            fos.flush();
            fos.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmProperties.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmProperties.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fos.close();
            } catch (IOException ex) {
                Logger.getLogger(FrmProperties.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Thanh Thai
    // Hàm enable/disable các component
    public void enableComponents(Container container, boolean enable) {
        Component[] components = container.getComponents();
        for (Component component : components) {
            component.setEnabled(enable);
            if (component instanceof Container) {
                enableComponents((Container) component, enable);
            }
        }
    }
    public void diableBtnMo(){
        btnMo.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnHuy;
    private org.jdesktop.swingx.JXButton btnMo;
    private org.jdesktop.swingx.JXButton btnSua;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXPanel jXPanel2;
    private org.jdesktop.swingx.JXPanel jXPanel4;
    private org.jdesktop.swingx.JXPanel jXPanel5;
    private javax.swing.JRadioButton jrMo;
    private javax.swing.JRadioButton jrTao;
    private org.jdesktop.swingx.JXTextField txtnameData;
    // End of variables declaration//GEN-END:variables
}
