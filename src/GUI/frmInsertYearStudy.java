/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.*;
import PUBLIC.clsMayjors_Public;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nguyen Thanh Thai
 */
public class frmInsertYearStudy extends javax.swing.JFrame {

    /**
     * Creates new form frmInsertYearStudy
     */
    private final ThongTinSV frmListStudent;
    private final clsFacultyBLL kBLL = new clsFacultyBLL();
    private final clsMayjors_BLL nBLL = new clsMayjors_BLL();
    private final clsMayjors_Public ngP = new clsMayjors_Public();
    private String maKh = "";
    private String maNg = "";
    
    // Hàm khởi tạo, với tham số là form ThongTinSV
    public frmInsertYearStudy(ThongTinSV cpn) {
        initComponents();
        this.frmListStudent = cpn;
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        FillComboYear();
        FillComboFaculty();
    }
    
    // Fill combo năm nhập học
    private void FillComboYear(){
        Calendar now = Calendar.getInstance(); // This gets the current date and time.
        int year = now.get(Calendar.YEAR);                 // This returns the year as an int.
        for (int i = year; i > 2000; i--) {
            cboNam.addItem(i);
        }
    }
    
    // Fill combo Khoa
    private void FillComboFaculty() {
        try {
            // Xóa toàn bộ những item của combobox cũ
            cboKhoa.removeAllItems();
            // Load khoa
            ResultSet rsKh = kBLL.LoadKhoa();
            while (rsKh.next()) {
                cboKhoa.addItem(new Item_Cbx(rsKh.getString(1), rsKh.getString(2), rsKh.getString(3)));
            }
            // Kiểm tra xem combobox Khoa đã bị xóa hết chưa
            if (cboKhoa.getSelectedItem() != null) {
                Item_Cbx item = (Item_Cbx) cboKhoa.getSelectedItem();
                // Lấy mã khoa
                maKh = item.getId();
                // Load dữ liệu cho combo Ngành theo mã khoa được chọn
                FillComboMayjors();
            }
            // Hàm xử lý sự kiện cho cboKhoa
            cboKhoa.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if (cboKhoa.getSelectedItem() != null) {
                        Item_Cbx item = (Item_Cbx) cboKhoa.getSelectedItem();
                        // Lấy mã khoa.
                        maKh = item.getId();
                        // Load dữ liệu cho combo Ngành theo mã khoa được chọn
                        FillComboMayjors();
                    }
                }
            });
        } catch (Exception ex) {
            Logger.getLogger(NhapMonHoc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Fill combo Ngành
    private void FillComboMayjors() {
        try {
            // Xóa toàn bộ những item của combobox cũ
            cboNganh.removeAllItems();
            // Add giá trị khoảng trắng mặc định cho combobox Môn học lý thuyết
            cboNganh.addItem(new Item_Cbx("1", "Tất cả", null));
            // Load ngành dựa vào mã khoa đang được chọn
            ngP.setIdFaculty(maKh);
            ResultSet x = nBLL.fLoadInfoMayjors_idFaculty(ngP);
            // add nó vào combobox Ngành
            while (x.next()) {
                cboNganh.addItem(new Item_Cbx(x.getString(1), x.getString(2), x.getString(4)));
            }
            // Xử lý sự kiện cho combo Nganh
            cboNganh.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    Item_Cbx itemNg = (Item_Cbx)cboNganh.getSelectedItem();
                    if(itemNg != null && !(itemNg.getId().equals("1"))){
                        // Lấy mã ngành đang được chọn
                        maNg = itemNg.getId();
                    }
                }
            });
        } catch (Exception ex) {
            Logger.getLogger(NhapMonHoc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboNam = new javax.swing.JComboBox();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        btnChon = new org.jdesktop.swingx.JXButton();
        btnHuy = new org.jdesktop.swingx.JXButton();
        cboKhoa = new javax.swing.JComboBox();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        cboNganh = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("NĂM NHẬP HỌC");
        setResizable(false);

        jXLabel1.setText("Năm nhập học:");
        jXLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnChon.setText("Chọn");
        btnChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonActionPerformed(evt);
            }
        });

        btnHuy.setText("Huy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        jXLabel3.setText("Khoa:");
        jXLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jXLabel4.setText("Ngành:");
        jXLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboNam, 0, 113, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboKhoa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboNganh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnChon, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboNganh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Chọn ngành, và năm nhập học của sinh viên
    private void btnChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonActionPerformed
        // TODO add your handling code here:
        if(cboNam.getSelectedItem() != null && cboKhoa.getSelectedItem() != null && cboNganh.getSelectedItem() != null && !((Item_Cbx)cboNganh.getSelectedItem()).getId().equals("1")){
            // Enable các components của formSinhVien
            frmListStudent.enableComponents(frmListStudent, true);
            frmListStudent.resetComponentsListStudents();
            frmListStudent.setBtnThemSelect(true);
            this.frmListStudent.setNamNhapHoc(cboNam.getSelectedItem().toString(), maNg, maKh);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(this, "Vui lòng chọn đầy đủ thông tin của sinh viên.");
        }
    }//GEN-LAST:event_btnChonActionPerformed

    // Sự kiện hủy frame
    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        frmListStudent.enableComponents(frmListStudent, true);
        frmListStudent.HuyThaoTac();
        this.dispose();
    }//GEN-LAST:event_btnHuyActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnChon;
    private org.jdesktop.swingx.JXButton btnHuy;
    private javax.swing.JComboBox cboKhoa;
    private javax.swing.JComboBox cboNam;
    private javax.swing.JComboBox cboNganh;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    // End of variables declaration//GEN-END:variables

    
}
